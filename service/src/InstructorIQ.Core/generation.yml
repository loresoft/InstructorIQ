project:
  namespace: 'InstructorIQ.Core'
  directory: .\
database:
  connectionString: 'Data Source=(local);Initial Catalog=InstructorIQ;Integrated Security=True'
  schemas:
    - IQ
data:
  context:
    name: 'InstructorIQContext'
    baseClass: DbContext
    namespace: '{Project.Namespace}.Data'
    directory: '{Project.Directory}\Data'
    document: true
  entity:
    namespace: '{Project.Namespace}.Data.Entities'
    directory: '{Project.Directory}\Data\Entities'
    document: true
  mapping:
    namespace: '{Project.Namespace}.Data.Mapping'
    directory: '{Project.Directory}\Data\Mapping'
    document: true
  query:
    generate: true
    indexPrefix: By
    uniquePrefix: GetBy
    namespace: '{Project.Namespace}.Data.Queries'
    directory: '{Project.Directory}\Data\Queries'
    document: true
model:
  shared:
    namespace: '{Project.Namespace}.Domain.Models'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Models'
    exclude:
      entities:
        - 'InviteUser'
        - 'Notification'
        - 'NotificationRecipient'
        - 'RefreshToken'
        - 'SessionInstructor'
        - 'SessionReferenceNumber'
        - 'TenantUserRole'
        - 'LinkToken'
      properties:
        - '\.Id$'
        - '\.Created$'
        - '\.CreatedBy$'
        - '\.Updated$'
        - '\.UpdatedBy$'
        - '\.RowVersion$'
        - 'Invite\.InviteHash$'
  read:
    generate: true
    name: '{Entity.Name}ReadModel'
    baseClass: 'EntityReadModel<Guid>'
    document: true
  create:
    generate: true
    name: '{Entity.Name}CreateModel'
    baseClass: 'EntityCreateModel<Guid>'
    document: true
    exclude:
      entities:
        - 'EmailDelivery'
        - 'HistoryRecord'
  update:
    generate: true
    name: '{Entity.Name}UpdateModel'
    baseClass: EntityUpdateModel
    document: true
    exclude:
      entities:
        - 'EmailDelivery'
        - 'HistoryRecord'
        - 'Invite'
  mapper:
    generate: true
    name: '{Entity.Name}Profile'
    baseClass: Profile
    namespace: '{Project.Namespace}.Domain.Mapping'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Mapping'
    document: true
  validator:
    generate: true
    name: '{Model.Name}Validator'
    baseClass: 'AbstractValidator<{Model.Name}>'
    namespace: '{Project.Namespace}.Domain.Validation'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Validation'
    document: true
