@page "/topic/{id:Guid}/history"
@using Humanizer
@using InstructorIQ.Core.Extensions
@using MediatR.CommandQuery.Audit

@model ViewModel
@{
    ViewData["Title"] = $"Topic {Model.Entity.Title}";
    ViewData["TopicTitle"] = $" - {Model.Entity.Title}";
    ViewData["TopicTab"] = "History";

    Layout = "_TopicLayout";
}
<div class="list-group list-group-flush">
    @foreach (var item in Model.History)
    {
        <a href="@Model.ComputeUrl(item)"
           title="View Change"
           class="list-group-item list-group-item-action">
            <div class="d-flex w-100 justify-content-between">
                <div class="mb-1">
                    <gravatar email="@item.ActivityBy"
                              size="24"></gravatar>
                    @item.ActivityBy
                </div>
                <small class="mt-1" title="@item.ActivityDate.ToString("dddd, dd MMMM yyyy HH:mm")">
                    @item.ActivityDate.ToLocalTime().Humanize()
                </small>
            </div>
            <p class="mb-1 mt-2">
                @if (item.Operation == AuditOperation.Create)
                {
                    <span class="text-muted">
                        Added @item.Entity.ToTitle() <span class="text-dark font-weight-bold"><summary-text content="@item.Description" truncate="100" /></span>
                    </span>
                }
                else if (item.Operation == AuditOperation.Delete)
                {
                    <span class="text-muted">
                        Removed @item.Entity.ToTitle() <span class="text-dark font-weight-bold"><summary-text content="@item.Description" truncate="100" /></span>
                    </span>
                }
                else if (item.Operation == AuditOperation.Update)
                {
                    <span class="text-muted">
                        Changed @item.Entity.ToTitle() <span class="text-dark font-weight-bold"><summary-text content="@item.Description" truncate="100" /></span>
                    </span>
                    <ul>
                        @foreach(var change in item.Changes)
                        {
                        <li>
                            <span class="text-dark font-weight-bold">@change.DisplayName</span>
                            <span>from <span class="text-dark font-weight-bold"><summary-text content="@change.OriginalFormatted" default-text="-none-" truncate="70" /></span></span>
                            <span>to <span class="text-dark font-weight-bold"><summary-text content="@change.CurrentFormatted" default-text="-none-" truncate="70" /></span></span>
                        </li>
                        }
                    </ul>
                }
            </p>
        </a>
    }
    @if (!Model.History.Any())
    {
        <div class="list-group-item">
            <p class="text-center font-italic">No Data</p>
        </div>
    }
</div>
