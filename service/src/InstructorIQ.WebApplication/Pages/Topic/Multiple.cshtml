@page
@using InstructorIQ.Core.Services
@model MultipleModel

<div id="topic-multiple" class="container">

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-page="/Index"
                   asp-route-tenant="@Model.TenantRoute">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a asp-page="/topic/index"
                   asp-route-tenant="@Model.TenantRoute">Topics</a>
            </li>
            <li class="breadcrumb-item active"
                aria-current="page">Create Topics</li>
        </ol>
    </nav>

    <alert type="@TempData["alert.type"]"
           message="@TempData["alert.message"]" />

    <form id="multiple-topic-form"
          name="multiple-topic-form"
          role="form"
          method="post">

        <div asp-validation-summary="All"
             class="text-danger"></div>

        <div class="card mb-5">
            <div class="card-header">
                <i class="fas fa-book-open mr-2"
                   aria-hidden="true"></i> @ViewData["Title"]
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="table-responsive">
                        <table class="table table-bordered table-sm table-striped m-0">
                            <colgroup>
                                <col style="width: 34px">
                                <col style="">
                                <col style="width: 125px">
                                <col style="width: 180px">
                                <col style="">
                            </colgroup>
                            <thead class="">
                                <tr>
                                    <th></th>
                                    <th>Title</th>
                                    <th>Year</th>
                                    <th>Month</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(topic, index) in topics" :key="topic.id">
                                    <td style="position: relative;">
                                        <input type="hidden"
                                               name="Topics.Index"
                                               v-model="topic.id" />
                                        <input type="hidden"
                                               :name="`Topics[${topic.id}].Id`"
                                               v-model="topic.id" />
                                        <input type="hidden"
                                               :name="`Topics[${topic.id}].TenantId`"
                                               v-model="topic.tenantId" />
                                        <input type="hidden"
                                               :name="`Topics[${topic.id}].Created`"
                                               v-model="topic.created" />
                                        <input type="hidden"
                                               :name="`Topics[${topic.id}].CreatedBy`"
                                               v-model="topic.createdBy" />

                                        <div class="dropdown">
                                            <button class="btn btn-sm" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                <button type="button"
                                                        class="dropdown-item"
                                                        v-on:click="copyTopic(topic)">
                                                    Duplicate Topic
                                                </button>
                                                <button type="button"
                                                        class="dropdown-item"
                                                        v-on:click="removeTopic(topic)">
                                                    Remove Topic
                                                </button>
                                            </div>
                                        </div>

                                    </td>
                                    <td>
                                        <input :name="`Topics[${topic.id}].Title`"
                                               v-model="topic.title"
                                               class="form-control form-control-sm" />
                                    </td>
                                    <td>
                                        <v-select append-to-body
                                                  label="text"
                                                  class="selector"
                                                  placeholder="- Year -"
                                                  :options="years"
                                                  :reduce="item => item.value"
                                                  v-model="topic.calendarYear"></v-select>

                                        <input type="hidden"
                                               :name="`Topics[${topic.id}].CalendarYear`"
                                               :value="topic.calendarYear" />

                                    </td>
                                    <td>
                                        <v-select append-to-body
                                                  label="text"
                                                  class="selector"
                                                  placeholder="- Month -"
                                                  :options="months"
                                                  :reduce="item => item.value"
                                                  v-model="topic.targetMonth"></v-select>

                                        <input type="hidden"
                                               :name="`Topics[${topic.id}].TargetMonth`"
                                               :value="topic.targetMonth" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col">
                        <button id="save-button"
                                type="submit"
                                asp-page-handler=""
                                class="btn btn-primary"
                                data-loading-text="<span class='spinner-border spinner-border-sm'></span> Saving...">
                            Save
                        </button>
                        <a id="cancel-button"
                           asp-page="/topic/index"
                           asp-route-tenant="@Model.TenantRoute"
                           class="btn btn-secondary">
                            Cancel
                        </a>
                    </div>
                    <div class="col-auto">
                        <button id="add-button"
                                type="button"
                                v-on:click="addTopic"
                                class="btn btn-secondary">
                            Add
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        var app = new Vue({
            el: '#topic-multiple',
            data: {
                tenantId: @Json.Serialize(Model.Tenant.Value.Id),
                created: @Json.Serialize(DateTime.UtcNow),
                topics: @Json.Serialize(Model.Topics),
                years: @Json.Serialize(SelectItemFactory.Years()),
                months: @Json.Serialize(SelectItemFactory.Months()),
            },
            methods: {
                copyTopic: function (instance) {
                    var topic = { ...instance, id: uuidv4() };
                    this.topics.push(topic);
                },
                removeTopic: function (instance) {
                    const index = this.topics.indexOf(instance);
                    if (index > -1) {
                        this.topics.splice(index, 1);
                    }
                },
                addTopic: function () {
                    var topic = {
                        id: uuidv4(),
                        tenantId: this.tenantId,
                        calendarYear: new Date().getFullYear(),
                        created: this.created
                    }
                    this.topics.push(topic);
                }
            }
        })


        $(function () {
            $("#multiple-topic-form")
                .submitGuard()
                .dirty({
                    preventLeaving: true
                });
        });
    </script>
}